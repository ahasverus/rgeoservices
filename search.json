[{"path":[]},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement rdev.nc@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to rgeoservices","title":"Contributing to rgeoservices","text":"First , thanks taking time contribute rgeoservices! types contributions encouraged valued. See Table contents different ways help details project handles . Please make sure read relevant section making contribution. make lot easier us maintainers smooth experience involved.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contributing to rgeoservices","text":"Code conduct Style guide Commit messages Asking questions Reporting bugs Requesting features Contributing code","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to rgeoservices","text":"project released Contributor Code Conduct. participating, expected uphold code. Please report unacceptable behavior rdev.nc@gmail.com.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contributing to rgeoservices","text":"use Tidyverse style guide writing R code. Functions documented roxygen2 syntax. rgeoservices uses lower_snake_case.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"","what":"Commit messages","title":"Contributing to rgeoservices","text":"want contribute commiting changes, please try use Conventional commits specification.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"asking-questions","dir":"","previous_headings":"","what":"Asking questions","title":"Contributing to rgeoservices","text":"ask question, best search existing Issues might help . case found suitable issue still need clarification, can write question issue. still feel need ask question need clarification, recommend following: Open new Issue. Use template other_issue.md. Provide much context can ’re running . Provide project platform versions (paste output sessionInfo()). take care issue soon possible.","code":""},{"path":[]},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"before-submitting-a-bug-report","dir":"","previous_headings":"Reporting bugs","what":"Before submitting a bug report","title":"Contributing to rgeoservices","text":"good bug report shouldn’t leave others needing chase information. Therefore, ask investigate carefully, collect information describe issue detail report. Please complete following steps advance help us fix potential bug fast possible. Make sure using latest version rgeoservices. Determine bug really bug error side. see users experienced (potentially already solved) issue , check already bug report existing bug error bug tracker.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"how-do-i-submit-a-bug-report","dir":"","previous_headings":"Reporting bugs","what":"How do I submit a bug report?","title":"Contributing to rgeoservices","text":"use GitHub Issues track bugs errors. run issue project: Open new Issue. Use template bug_report.md. Explain behavior expect actual behavior. Please provide much context possible describe reproduction steps someone else can follow recreate issue . usually includes code reproducible example. take care issue soon possible.","code":""},{"path":[]},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"before-requesting-a-feature","dir":"","previous_headings":"Requesting features","what":"Before requesting a feature","title":"Contributing to rgeoservices","text":"Make sure using latest version rgeoservices. Read documentation carefully find functionality already covered. Perform search see enhancement already suggested. , add comment existing issue instead opening new one.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"how-do-i-submit-a-feature-request","dir":"","previous_headings":"Requesting features","what":"How do I submit a feature request?","title":"Contributing to rgeoservices","text":"Feature requests tracked GitHub Issues. Open new Issue. Use template feature_request.md. Provide clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Explain enhancement useful rgeoservices users. take care issue soon possible.","code":""},{"path":[]},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"general-workflow","dir":"","previous_headings":"Contributing code","what":"General workflow","title":"Contributing to rgeoservices","text":"use GitHub flow collaborate project: Fork repository using GitHub interface. Clone fork using git clone fork-url (replace fork-url URL fork). Alternatively, open RStudio IDE create New Project Version Control. Create new branch w/ git checkout -b branch-name (replace branch-name name new branch). Make contribution (see examples). Stage (git add) commit (git commit) changes often necessary Push changes GitHub w/ git push origin branch-name. Submit Pull Request original repo. review PR soon possible.","code":""},{"path":[]},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"editing-the-readme","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing the README","title":"Contributing to rgeoservices","text":"want contribute improving README, please edit README.Rmd (README.md). forget update README.md running:","code":"rmarkdown::render(\"README.Rmd\")"},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"editing-vignettes","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing vignettes","title":"Contributing to rgeoservices","text":"want contribute editing existing vignette, just edit corresponding Rmd file stored vignettes/ folder. want contribute adding new vignette, create new Rmd file vignettes/ folder add following header: use new external dependency, forget add DESCRIPTION file section Suggests (package already listed section Imports). Check integrity package :","code":"--- title: \"Vignette Title\" output: rmarkdown::html_vignette vignette: >   %\\VignetteIndexEntry{Vignette Title}   %\\VignetteEngine{knitr::rmarkdown}   %\\VignetteEncoding{UTF-8} --- devtools::check()"},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"editing-function-documentation","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing function documentation","title":"Contributing to rgeoservices","text":"want contribute improving documentation function, open corresponding file R/ folder edit lines starting #' (roxygen2 syntax). Update documentation (Rd files man/ folder) running: use new external dependency example section, forget add DESCRIPTION file section Imports (package already listed). Check integrity package :","code":"devtools::document() devtools::check()"},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"fix-bug","dir":"","previous_headings":"Contributing code","what":"Fix bug","title":"Contributing to rgeoservices","text":"want contribute improving code function, open edit corresponding file R/ folder. Check integrity package : forget adapt unit tests function editing corresponding file stored tests/testthat/ folder. use package testthat implement unit tests. Check tests running:","code":"devtools::check() devtools::test()"},{"path":"https://ahasverus.github.io/rgeoservices/CONTRIBUTING.html","id":"new-feature","dir":"","previous_headings":"Contributing code","what":"New feature","title":"Contributing to rgeoservices","text":"want contribute submitting new feature, please follow workflow: Create new R file folder R/. Implement code function. Document function w/ roxygen2 syntax. necessary, add additional dependencies DESCRIPTION file. Update package documentation w/ devtools::document(). Create new R file folder tests/testthat/. Implement unit tests new function. Check integrity package w/ devtools::check(). Thanks contribution!","code":""},{"path":"https://ahasverus.github.io/rgeoservices/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://ahasverus.github.io/rgeoservices/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"the-geocoding-service","dir":"Articles","previous_headings":"","what":"The Geocoding service","title":"Get started","text":"IGN Geoplatform provides Geocoding service. service can used two different ways: retrieve geographical coordinates administrative information address (point interest) retrieve address (point interest) geographical coordinates.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"retrieve-geographical-coordinates","dir":"Articles","previous_headings":"The Geocoding service","what":"Retrieve geographical coordinates","title":"Get started","text":"User can retrieve geographical coordinates administrative information (postal code, INSEE code, city, etc.) French address (postal address, street, city) point interest (POI) city hall, museum, public garden, lake, etc. service implemented gs_get_coordinates() function rgeoservices.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"postal-address","dir":"Articles","previous_headings":"The Geocoding service > Retrieve geographical coordinates","what":"Postal address","title":"Get started","text":"Let’s try retrieve geographical coordinates postal address. argument index used indicate search address (index = 'address') point interest (index = 'poi'). Depending value argument, columns can NA. User can filter results using additional parameters: postcode city specify postal code city name associated address type specify precision address, e.g. housenumber, street, locality, municipality Using filters can help getting better results. Let’s display result interactive map.","code":"## Retrieve coordinates from an address ---- x <- gs_get_coordinates(   query = \"5 rue de l'Ecole de Médecine\",    index = \"address\",   limit = 10 ) ## Retrieve coordinates from an address (with filters) ---- x <- gs_get_coordinates(   query    = \"5 rue de l'Ecole de Médecine\",    index    = \"address\",   limit    = 10,   postcode = \"34000\",   type     = \"housenumber\" ) ## Convert to spatial object ---- x <- sf::st_as_sf(   x      = x,   coords = c(\"longitude\", 'latitude'),   crs    = sf::st_crs(4326) )  ## Setup 'mapview' ---- mapviewOptions(   basemaps           = \"OpenStreetMap\",   legend             = FALSE,   layers.control.pos = \"topright\" )  ## Interactive map of the result ---- mapview(   x           = x,    color       = \"white\",    col.regions = \"red\",    cex         = 10 )"},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"city","dir":"Articles","previous_headings":"The Geocoding service > Retrieve geographical coordinates","what":"City","title":"Get started","text":"Let’s try retrieve geographical coordinates city. Let’s map result.","code":"## Retrieve coordinates from a city ---- x <- gs_get_coordinates(   query    = \"Montpellier\",    index    = \"address\",   limit    = 10,   postcode = \"34000\",   type     = \"municipality\"  ) ## Convert to spatial object ---- x <- sf::st_as_sf(   x      = x,   coords = c(\"longitude\", 'latitude'),   crs    = sf::st_crs(4326) ) ## Download static map of France (GADM) ---- gadm_fra0 <- geodata::gadm(   country = \"France\",   level   = 0,   path    = \".\" ) ggplot() +    geom_sf(data = gadm_fra0) +    geom_sf(data = x, size = 4, col = \"red\") +    theme_bw()"},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"retrieve-address-or-poi","dir":"Articles","previous_headings":"The Geocoding service","what":"Retrieve address or POI","title":"Get started","text":"…","code":""},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"the-altimetry-service","dir":"Articles","previous_headings":"","what":"The Altimetry service","title":"Get started","text":"…","code":""},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"the-route-planner-service","dir":"Articles","previous_headings":"","what":"The Route planner service","title":"Get started","text":"…","code":""},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"the-isochrone-service","dir":"Articles","previous_headings":"","what":"The Isochrone service","title":"Get started","text":"…","code":""},{"path":"https://ahasverus.github.io/rgeoservices/articles/rgeoservices.html","id":"the-isodistance-service","dir":"Articles","previous_headings":"","what":"The Isodistance service","title":"Get started","text":"…","code":""},{"path":"https://ahasverus.github.io/rgeoservices/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Casajus. Author, maintainer, copyright holder.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Casajus Nicolas (2025). rgeoservices: R client IGN Geoservices API. R package version 0.0.0.9000, https://github.com/ahasverus/rgeoservices.","code":"@Manual{,   title = {rgeoservices: {A} {R} client for the IGN Geoservices API},   author = {{Casajus Nicolas}},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/ahasverus/rgeoservices}, }"},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"rgeoservices-","dir":"","previous_headings":"","what":"A R Client for the IGN Geoservices API","title":"A R Client for the IGN Geoservices API","text":"• Overview • Features • Installation • Get started • Citation • Contributing • Acknowledgments","code":""},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A R Client for the IGN Geoservices API","text":"R package rgeoservices R client streamlining access services provided French National Institute Geographic Forest Information (IGN) open access Geoplatform. Geoplatform can used query IGN BD TOPO® database retrieve geographical information (France)","code":""},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"A R Client for the IGN Geoservices API","text":"Currently rgeoservices can access following services: Geocoding service 🌐 Service used obtain geographic coordinates address point interest. reverse operation also possible. See gs_get_geocode() gs_get_coordinates() functions. Altimetry service 🌐 Service used obtain altitude geographical point longitudinal profile. See gs_get_elevation() function. Route planner service 🌐 Service used obtain route two points. See gs_get_itinerary() function. Isochrone/Isodistance service 🌐 Service used get accessible area within certain travel time/distance. See gs_get_isochrone() gs_get_isodistance() functions.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A R Client for the IGN Geoservices API","text":"can install development version GitHub : can attach package rgeoservices:","code":"## Install 'remotes' package (if not already installed) ---- if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") }  ## Install 'rgeoservices' from GitHub ---- remotes::install_github(\"ahasverus/rgeoservices\") library(\"rgeoservices\")"},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"A R Client for the IGN Geoservices API","text":"overview main features rgeoservices, please read Reference page. N.B. vignette available soon.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"A R Client for the IGN Geoservices API","text":"Please cite rgeoservices : Casajus Nicolas (2025) rgeoservices: R client IGN Geoservices API. R package version 0.0.0.9000. https://github.com/ahasverus/rgeoservices/","code":""},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"A R Client for the IGN Geoservices API","text":"types contributions encouraged valued. information, check Contributor Guidelines. Please note rgeoservices project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"A R Client for the IGN Geoservices API","text":"’d like thank IGN making invaluable data freely available.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve coordinates and information of an address — gs_get_coordinates","title":"Retrieve coordinates and information of an address — gs_get_coordinates","text":"Queries Geoservices (IGN) API using /geocode endpoint extract coordinates administrative information French address point interest (POI) cityhall, museum, etc. service uses IGN BD TOPO® database. API documentation available .","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve coordinates and information of an address — gs_get_coordinates","text":"","code":"gs_get_coordinates(   query,   index = \"address\",   limit = 10,   postcode = NULL,   type = NULL,   city = NULL,   category = NULL,   longitude = NULL,   latitude = NULL )"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve coordinates and information of an address — gs_get_coordinates","text":"query character length 1. address point interest search . See example. index character length 1. type location. Possible values: address poi. limit numeric length 1. maximum number results return (1 20). postcode character length 1 (optional). Can used filter results based postal code. type character length 1 (optional). Can used filter results based type address. Possible values : housenumber, street, locality, municipality. argument works index = 'address'. city character length 1 (optional). Can used filter results based city name. category character length 1 (optional). Can used filter results based type POI. Run gs_get_poi_categories() get accepted values. argument works index = 'poi'. longitude numeric length 1 (optional). Can used filter results based longitude known near point. latitude numeric length 1 (optional). Can used filter results based latitude known near point.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve coordinates and information of an address — gs_get_coordinates","text":"data.frame following columns: query: user query longitude: longitude location matching query latitude: latitude location matching query label: label location (combination name, postal & city) name: name location BD TOPO® system toponym: toponym point interest housenumber: housenumber address street: street name address city: city address postcode: postal code city citycode: COG (INSEE) code city context: combination department region category: type point interest score: relevance match (used sort results) Depending value index (address poi) columns can NA.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve coordinates and information of an address — gs_get_coordinates","text":"","code":"if (FALSE) { # \\dontrun{ # Search by full postal address ----  gs_get_coordinates(query = \"1 Place Georges Freche 34000 Montpellier\",                     index = \"address\")   # Search by full postal address (better results) ----  gs_get_coordinates(query = \"1 Place Georges Freche\",                     index = \"address\",                     type  = \"housenumber\",                    city  = \"Montpellier\")   # Search by point of interest (building) ----  gs_get_coordinates(query    = \"Mairie de Montpellier\",                     limit    = 10,                     index    = \"poi\",                     category = \"mairie\",                    citycode = 34000)   # Search by point of interest (lake) ----  dat <- gs_get_coordinates(query    = \"Lac d'Annecy\",                            index    = \"poi\",                            category = \"lac\")   # Map coordinates ---- xy <- sf::st_as_sf(dat, coords = 2:3, crs = sf::st_crs(4326))  mapview::mapview(xy) } # }"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the elevation of French locations — gs_get_elevation","title":"Retrieve the elevation of French locations — gs_get_elevation","text":"Queries Geoservices (IGN) API using /altimetrie endpoint extract elevation one many French (mainland) locations. service uses IGN RGE ALTI® database. API documentation available .","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_elevation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the elevation of French locations — gs_get_elevation","text":"","code":"gs_get_elevation(longitude, latitude)"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_elevation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the elevation of French locations — gs_get_elevation","text":"longitude numeric vector. longitude one several French locations defined WGS84 system. latitude numeric vector. latitude one several French locations defined WGS84 system.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_elevation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the elevation of French locations — gs_get_elevation","text":"data.frame three columns: longitude, latitude, elevation. number rows matches number provided locations.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_elevation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the elevation of French locations — gs_get_elevation","text":"","code":"if (FALSE) { # \\dontrun{ # Set Florac-Trois-Rivieres, Lozere coordinates ----  florac <- data.frame(longitude  =  3.59608777,                      latitude   = 44.32690171)   # Get Florac-Trois-Rivieres, Lozere elevation ----  ele <- gs_get_elevation(longitude = florac$\"longitude\",                          latitude  = florac$\"latitude\") } # }"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an address or a point of interest from coordinates — gs_get_geocode","title":"Retrieve an address or a point of interest from coordinates — gs_get_geocode","text":"Queries Geoservices (IGN) API using /geocode endpoint retrieve administrative information French address point interest (POI) cityhall, museum, etc geographical coordinates. service uses IGN BD TOPO® database. API documentation available .","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an address or a point of interest from coordinates — gs_get_geocode","text":"","code":"gs_get_geocode(   longitude,   latitude,   index = \"address\",   limit = 10,   postcode = NULL,   type = NULL,   city = NULL,   category = NULL )"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an address or a point of interest from coordinates — gs_get_geocode","text":"longitude numeric length 1. longitude location (WGS84). latitude numeric length 1. latitude location (WGS84). index character length 1. type location return. Possible values: address poi. limit numeric length 1. maximum number results return (1 20). postcode character length 1 (optional). Can used filter results based postal code. type character length 1 (optional). Can used filter results based type address. Possible values : housenumber, street, locality, municipality. argument works index = 'address'. city character length 1 (optional). Can used filter results based city name. category character length 1 (optional). Can used filter results based type POI. Run gs_get_poi_categories() get accepted values. argument works index = 'poi'.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an address or a point of interest from coordinates — gs_get_geocode","text":"data.frame following columns: longitude: longitude matched location latitude: latitude matched location label: label location (combination name, postal & city) name: name location BD TOPO® system toponym: toponym point interest housenumber: housenumber address street: street name address city: city address postcode: postal code city citycode: COG (INSEE) code city context: combination department region category: type point interest distance: distance provided coordinates (meters) oldcity: old name city oldcitycode: INSEE code old name score: relevance match (used sort results) Depending value index (address poi) columns can NA.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an address or a point of interest from coordinates — gs_get_geocode","text":"","code":"if (FALSE) { # \\dontrun{ # Search for a postal address ----  gs_get_geocode(longitude = 3.896549,                 latitude  = 43.59884,                 index     = \"address\")   # Search for a point of interest (building) ----  gs_get_geocode(longitude = 3.896549,                 latitude  = 43.59884,                 index     = \"poi\")   # Search for a point of interest (lake) ----  gs_get_geocode(longitude = 6.186529,                 latitude  = 45.84561,                 index     = \"poi\") } # }"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isochrone.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an isochrone around a French location — gs_get_isochrone","title":"Calculate an isochrone around a French location — gs_get_isochrone","text":"Queries Geoservices (IGN) API using /isochrone endpoint calculate isochrone around French (mainland) location. service uses IGN BD TOPO® Valhalla get road data. isochrone area linking points accessible given means transport (argument profile) given time (argument cost_value). API documentation available .","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isochrone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an isochrone around a French location — gs_get_isochrone","text":"","code":"gs_get_isochrone(   longitude,   latitude,   cost_value,   profile = \"car\",   direction = \"departure\",   time_unit = \"hour\" )"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isochrone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an isochrone around a French location — gs_get_isochrone","text":"longitude numeric length 1. longitude location defined WGS84 system. location must belongs Mainland France. latitude numeric length 1. latitude location defined WGS84 system. location must belongs Mainland France. cost_value numeric length 1. time used calculate isochrone. Unit specified argument time_unit. Must strictly positive. profile character length 1. means transport used calculate isochrone. Possible values: car pedestrian. direction character length 1. course direction. direction = \"departure\", isochrone calculated starting point (defined longitude latitude arguments) provide potential arrival points. direction = \"arrival\", isochrone provide potential departure points arrival point (defined longitude latitude arguments). time_unit character length 1. time unit argument cost_value. Possible values: hour, minute second.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isochrone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an isochrone around a French location — gs_get_isochrone","text":"isochrone sf POLYGON object.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isochrone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate an isochrone around a French location — gs_get_isochrone","text":"","code":"if (FALSE) { # \\dontrun{ # Set Florac-Trois-Rivieres, Lozere coordinates ----  florac <- data.frame(longitude  =  3.59608777,                      latitude   = 44.32690171)   # Isochrone of one hour around Florac-Trois-Rivieres, Lozere (by car) ----  iso_car <- gs_get_isochrone(longitude  = florac$\"longitude\",                              latitude   = florac$\"latitude\",                              cost_value = 60,                             time_unit  = \"minute\",                             profile    = \"car\")   # Isochrone of one hour around Florac-Trois-Rivieres, Lozere (on foot) ----  iso_foot <- gs_get_isochrone(longitude  = florac$\"longitude\",                               latitude   = florac$\"latitude\",                               cost_value = 60,                              time_unit  = \"minute\",                              profile    = \"pedestrian\")   # Convert point to sf object ----  florac <- sf::st_as_sf(florac, coords = 1:2, crs = sf::st_crs(4326))   # Make map ----  library(ggplot2)  ggplot() +   geom_sf(data = iso_car,  fill = \"red\", col = \"white\") +   geom_sf(data = iso_foot, fill = \"darkgreen\", col = \"white\") +   geom_sf(data = florac, col = \"white\", shape = 19) +   theme_bw() } # }"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isodistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an isodistance around a French location — gs_get_isodistance","title":"Calculate an isodistance around a French location — gs_get_isodistance","text":"Queries Geoservices (IGN) API using /isochrone endpoint calculate isodistance around French (mainland) location. service uses IGN BD TOPO® Valhalla get road data. isodistance area linking points accessible given means transport (argument profile) given distance (argument cost_value). API documentation available .","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isodistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an isodistance around a French location — gs_get_isodistance","text":"","code":"gs_get_isodistance(   longitude,   latitude,   cost_value,   profile = \"car\",   direction = \"departure\",   distance_unit = \"kilometer\" )"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isodistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an isodistance around a French location — gs_get_isodistance","text":"longitude numeric length 1. longitude location defined WGS84 system. location must belongs Mainland France. latitude numeric length 1. latitude location defined WGS84 system. location must belongs Mainland France. cost_value numeric length 1. time used calculate isodistance. Unit specified argument distance_unit. Must strictly positive. profile character length 1. means transport used calculate isodistance. Possible values: car pedestrian. direction character length 1. course direction. direction = \"departure\", isodistance calculated starting point (defined longitude latitude arguments) provide potential arrival points. direction = \"arrival\", isodistance provide potential departure points arrival point (defined longitude latitude arguments). distance_unit character length 1. distance unit argument cost_value. Possible values: hour, minute second.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isodistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an isodistance around a French location — gs_get_isodistance","text":"isodistance sf POLYGON object.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_isodistance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate an isodistance around a French location — gs_get_isodistance","text":"","code":"if (FALSE) { # \\dontrun{ # Set Florac-Trois-Rivieres, Lozere coordinates ----  florac <- data.frame(longitude  =  3.59608777,                      latitude   = 44.32690171)   # Isodistance of 10 km around Florac-Trois-Rivieres, Lozere (by car) ----  iso <- gs_get_isodistance(longitude     = florac$\"longitude\",                            latitude      = florac$\"latitude\",                            cost_value    = 10,                           distance_unit = \"kilometer\",                           profile       = \"car\")   # Convert point to sf object ----  florac <- sf::st_as_sf(florac, coords = 1:2, crs = sf::st_crs(4326))   # Make map ----  library(ggplot2)  ggplot() +   geom_sf(data = iso,  fill = \"red\", col = \"white\") +   geom_sf(data = florac, col = \"white\", shape = 19) +   theme_bw() } # }"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_itinerary.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an itinerary between two locations — gs_get_itinerary","title":"Calculate an itinerary between two locations — gs_get_itinerary","text":"Queries Geoservices (IGN) API using /itineraire endpoint calculate itinerary two French (mainland) locations. service uses IGN BD TOPO® OSRM get road data. API documentation available .","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_itinerary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an itinerary between two locations — gs_get_itinerary","text":"","code":"gs_get_itinerary(   start,   end,   intermediates = NULL,   profile = \"car\",   optimization = \"fastest\",   time_unit = \"minute\",   distance_unit = \"kilometer\",   by_feature = FALSE )"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_itinerary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an itinerary between two locations — gs_get_itinerary","text":"start vector two numeric values. longitude latitude location departure defined WGS84 system. location must belong Mainland France. end vector two numeric values. longitude latitude location arrival defined WGS84 system. location must belong Mainland France. intermediates list two-numeric vectors (optional). Intermediate points route must reach. profile character length 1. means transport used calculate itinerary. Possible values: car pedestrian. optimization character length 1. Possible values: fastest shortest. time_unit character length 1. time unit estimated duration. Possible values: hour, minute second. distance_unit character length 1. distance unit estimated distance. Possible values: meter kilometer. by_feature logical. FALSE (default) returns itinerary one single sf LINESTRING. TRUE returns itinerary collection sf LINESTRING, portion corresponding unique road.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_itinerary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an itinerary between two locations — gs_get_itinerary","text":"itinerary sf LINESTRING object.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_itinerary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate an itinerary between two locations — gs_get_itinerary","text":"","code":"if (FALSE) { # \\dontrun{ # Get coordinates of Ganges cityhall ----   ganges <- gs_get_coordinates(   query    = \"Mairie de Ganges\",    index    = \"poi\",    category = \"mairie\",   limit    = 1 )  ganges <- c(ganges$\"longitude\", ganges$\"latitude\")   # Get coordinates of Ales cityhall ----  ales <- gs_get_coordinates(   query    = \"Mairie d'Ales\",    index    = \"poi\",    category = \"mairie\",   limit    = 1 )  ales <- c(ales$\"longitude\", ales$\"latitude\")   # Calculate fastest itinerary between the two cities ----  itinerary <- gs_get_itinerary(   start = ganges,   end   = ales)   # Same but with information of each road ----  itinerary <- gs_get_itinerary(   start      = ganges,    end        = ales,    by_feature = TRUE)   # Get coordinates of Aigremont cityhall ----  aigremont <- gs_get_coordinates(   query    = \"Mairie d'Aigremont\",    index    = \"poi\",    category = \"mairie\",   postcode = 30350,   limit    = 1 )  aigremont <- c(aigremont$\"longitude\", aigremont$\"latitude\")   # Calculate fastest itinerary between the two cities... ---- # ...with a stop at Aigremont, Gard  itinerary <- gs_get_itinerary(   start         = ganges,    end           = ales,    intermediates = list(aigremont) )   # Example for hiking (part of GR70) ----  departure <- gs_get_coordinates(   query    = \"Le Pont de Barre Florac\",   index    = \"poi\",   category = \"pont\" )  departure <- c(departure$\"longitude\", departure$\"latitude\")  arrival <- gs_get_coordinates(   query    = \"Chateau de Saint-Julien-d'Arpaon\",   index    = \"poi\",   category = \"ruines\" )  arrival <- c(arrival$\"longitude\", arrival$\"latitude\")  itinerary <- gs_get_itinerary(   start         = departure,    end           = arrival,    profile       = \"pedestrian\",   optimization  = NULL,   intermediates = list(     c(3.65052, 44.303574)   ) ) } # }"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_poi_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Get point of interest categories — gs_get_poi_categories","title":"Get point of interest categories — gs_get_poi_categories","text":"Queries Geoservices (IGN) API using /geocode endpoint list accepted categories points interest (POI) cityhall, museum, lake, etc. service uses IGN BD TOPO® database. API documentation available .","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_poi_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get point of interest categories — gs_get_poi_categories","text":"","code":"gs_get_poi_categories()"},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_poi_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get point of interest categories — gs_get_poi_categories","text":"data.frame two columns: type category name.","code":""},{"path":"https://ahasverus.github.io/rgeoservices/reference/gs_get_poi_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get point of interest categories — gs_get_poi_categories","text":"","code":"if (FALSE) { # \\dontrun{ # Get accepted values for POI categories (Geocode API) ----  gs_get_poi_categories() } # }"},{"path":"https://ahasverus.github.io/rgeoservices/reference/rgeoservices-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rgeoservices: A R Client for the IGN Geoservices API — rgeoservices-package","title":"rgeoservices: A R Client for the IGN Geoservices API — rgeoservices-package","text":"set functions query API provided French National Institute Geographic Forest Information (IGN) online Geoplateform https://geoservices.ign.fr/documentation/services/services-geoplateforme.","code":""},{"path":[]},{"path":"https://ahasverus.github.io/rgeoservices/reference/rgeoservices-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rgeoservices: A R Client for the IGN Geoservices API — rgeoservices-package","text":"Maintainer: Nicolas Casajus rdev.nc@gmail.com (ORCID) [copyright holder]","code":""}]
