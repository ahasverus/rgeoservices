% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_get_isodistance.R
\name{gs_get_isodistance}
\alias{gs_get_isodistance}
\title{Calculate an isodistance around a French location}
\usage{
gs_get_isodistance(
  longitude,
  latitude,
  cost_value,
  profile = "car",
  direction = "departure",
  distance_unit = "kilometer"
)
}
\arguments{
\item{longitude}{a \code{numeric} of length 1. The longitude of the location
defined in the WGS84 system. The location must belongs to Mainland France.}

\item{latitude}{a \code{numeric} of length 1. The latitude of the location
defined in the WGS84 system. The location must belongs to Mainland France.}

\item{cost_value}{a \code{numeric} of length 1. The time used to calculate the
isodistance. Unit is specified by the argument \code{distance_unit}. Must be
strictly positive.}

\item{profile}{a \code{character} of length 1. The means of transport used to
calculate the isodistance. Possible values: \code{car} and \code{pedestrian}.}

\item{direction}{a \code{character} of length 1. The course direction.
If \code{direction = "departure"}, the isodistance will be calculated from the
starting point (defined by \code{longitude} and \code{latitude} arguments) and will
provide the potential arrival points.
If \code{direction = "arrival"}, the isodistance will provide the potential
departure points to the arrival point (defined by \code{longitude} and
\code{latitude} arguments).}

\item{distance_unit}{a \code{character} of length 1. The distance unit of the
argument \code{cost_value}. Possible values: \code{hour}, \code{minute} and \code{second}.}
}
\value{
The isodistance as a \verb{sf POLYGON} object.
}
\description{
Queries the Geoservices (IGN) API using the \strong{/isochrone} endpoint to
calculate an isodistance around a French (mainland) location. This service
uses the IGN BD TOPOÂ® Valhalla to get road data.

An isodistance is an area linking the points accessible by a given means of
transport (argument \code{profile}) for a given distance (argument \code{cost_value}).

The API documentation is available \href{https://www.geoportail.gouv.fr/depot/swagger/itineraire.html#/Utilisation/isochrone}{here}.
}
\examples{
\dontrun{
# Set Florac-Trois-Rivieres, Lozere coordinates ----

florac <- data.frame(longitude  =  3.59608777,
                     latitude   = 44.32690171)


# Isodistance of 10 km around Florac-Trois-Rivieres, Lozere (by car) ----

iso <- gs_get_isodistance(longitude     = florac$"longitude", 
                          latitude      = florac$"latitude", 
                          cost_value    = 10,
                          distance_unit = "kilometer",
                          profile       = "car")


# Convert point to sf object ----

florac <- sf::st_as_sf(florac, coords = 1:2, crs = sf::st_crs(4326))


# Make map ----

library(ggplot2)

ggplot() +
  geom_sf(data = iso,  fill = "red", col = "white") +
  geom_sf(data = florac, col = "white", shape = 19) +
  theme_bw()
}
}
